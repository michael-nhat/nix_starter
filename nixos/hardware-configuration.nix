# This is just an example, you should generate yours with nixos-generate-config and put it in here.
# {
#   fileSystems."/" = {
#     device = "/dev/sda1";
#     fsType = "ext4";
#   };

#   # Set your system kind (needed for flakes)
#   nixpkgs.hostPlatform = "x86_64-linux";
# }

# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ ];

  boot.initrd.availableKernelModules = [ "ata_piix" "ohci_pci" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/5183b12c-f4b2-4cd7-ada6-ddcfa9097f92";
      fsType = "ext4";
    };

  fileSystems."/home-nhat" =
    { device = "nhat";
      fsType = "vboxsf";
    };

  fileSystems."/media/sf_mydisk" =
    { device = "mydisk";
      fsType = "vboxsf";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  virtualisation.virtualbox.guest.enable = true;
}
